{"version":3,"sources":["pages/MainPage/styles.js","assets/images/github-logo.svg","pages/MainPage/index.js","pages/RepositoriesPage/Profile/styles.js","pages/RepositoriesPage/Profile/index.js","pages/RepositoriesPage/Filter/styles.js","pages/RepositoriesPage/Filter/index.js","pages/RepositoriesPage/Repositories/Repository/styles.js","services/config.js","pages/RepositoriesPage/Repositories/Repository/index.js","pages/RepositoriesPage/Repositories/styles.js","pages/RepositoriesPage/Repositories/index.js","pages/RepositoriesPage/styles.js","services/api.js","pages/RepositoriesPage/index.js","routes.js","styles/Theme.js","styles/global.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Logo","img","Title","h1","props","theme","colors","text","Form","Input","input","metalDark","Button","Link","container","MainPage","useState","login","setLogin","src","githubLogo","alt","placeholder","value","onChange","event","target","to","size","Header","breakpoints","md","Avatar","Login","fontSizes","title","Name","h2","subtitle","Inner","Data","p","Profile","user","avatar_url","name","following","followers","company","location","blog","href","Selector","button","color","light","white","black","Cleaner","Filter","languages","currentLanguage","onClick","selectors","map","count","className","toLowerCase","undefined","defaultProps","champagneDark","h3","large","Description","small","Footer","footer","Lang","span","a","langColors","javascript","typescript","python","html","css","scss","vue","php","go","ruby","c","Repository","repository","language","description","html_url","sm","Repositories","repositories","repos","filter","id","Loading","main","Sidebar","aside","background","Main","section","api","axios","create","baseURL","process","getUser","get","getRepos","getLangsFrom","stats","reduce","data","null","Object","keys","sort","b","RepositoriesPage","useParams","setUser","setRepositories","setLanguages","setCurrentLanguage","loading","setLoading","useEffect","loadData","Promise","all","userResponse","repositoriesResponse","Routes","path","turquese","turqueseDark","green","greenDark","blue","blueDark","violet","violetDark","yellow","yellowDark","orange","orangeDark","red","redDark","champagne","metal","asphalt","asphaltDark","carbon","carbonDark","primary","secondary","danger","dark","link","devSamurai","fonts","join","normal","xs","lg","xl","xxl","Theme","children","createGlobalStyle","App","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0ced71c5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  min-height: 100vh;\n  padding: 0 2rem;\n  overflow-y: auto;\n`;\n\nexport const Logo = styled.img`\n  width: 130px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2.2rem;\n  color: ${(props) => props.theme.colors.text};\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 583px;\n`;\n\nexport const Input = styled.input`\n  background: rgba(0, 0, 0, 0.8);\n  width: 100%;\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  font-size: 24px;\n  margin-right: 24px;\n  padding: 0 24px;\n\n  &::placehoder {\n    color: ${(props) => props.theme.colors.metalDark};\n  }\n`;\n\nexport const Button = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background: transparent;\n  width: 80px;\n  height: 64px;\n  border: 3px solid ${(props) => props.theme.colors.text};\n  transition: background 0.3s;\n\n  &:hover {\n    background: ${(props) => props.theme.colors.container};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/github-logo.9fcacef2.svg\";","import React, { useState } from 'react';\nimport { MdSearch } from 'react-icons/md';\n\nimport { Container, Logo, Title, Form, Input, Button } from './styles';\n\nimport githubLogo from '../../assets/images/github-logo.svg';\n\nconst MainPage = () => {\n  const [login, setLogin] = useState('');\n\n  return (\n    <Container>\n      <Logo src={githubLogo} alt=\"API Github\" />\n      <Title>API Github</Title>\n      <Form>\n        <Input\n          placeholder=\"usuário\"\n          value={login}\n          onChange={(event) => setLogin(event.target.value)}\n        />\n        <Button to={`/${login}/repositories`}>\n          <MdSearch size={42} />\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default MainPage;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 1rem;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 0;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Avatar = styled.img`\n  align-self: center;\n  border-radius: 50%;\n  width: 70%;\n  margin-bottom: 1rem;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    width: 70px;\n    height: 70px;\n    margin-right: 1rem;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Login = styled.h1`\n  font-size: ${(props) => props.theme.fontSizes.title};\n`;\n\nexport const Name = styled.h2`\n  font-size: ${(props) => props.theme.fontSizes.subtitle};\n  font-weight: normal;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n\nexport const Inner = styled.div`\n  padding: 1rem 0;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n\nexport const Data = styled.p`\n  display: flex;\n  align-items: center;\n  line-height: 1.5;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdGroup, MdLocationCity, MdWork, MdLink } from 'react-icons/md';\n\nimport { Container, Header, Avatar, Login, Name, Inner, Data } from './styles';\n\nconst Profile = ({ user }) => (\n  <Container>\n    <Header>\n      <Avatar src={user.avatar_url} />\n      <Login>{user.login}</Login>\n      <Name>{user.name}</Name>\n    </Header>\n    <Inner>\n      <Data>\n        <MdGroup size={20} />\n        {user.following}&nbsp;<i>seguidores</i>&nbsp;&middot;&nbsp;\n        {user.followers}&nbsp;<i>seguindo</i>\n      </Data>\n      {user.company && (\n        <Data>\n          <MdWork size={20} /> {user.company}\n        </Data>\n      )}\n      {user.location && (\n        <Data>\n          <MdLocationCity size={20} /> {user.location}\n        </Data>\n      )}\n      {user.blog && (\n        <Data>\n          <MdLink size={20} />\n          <a href={`\\\\${user.blog}`}>{user.blog}</a>\n        </Data>\n      )}\n    </Inner>\n  </Container>\n);\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    login: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    avatar_url: PropTypes.string.isRequired,\n    followers: PropTypes.number.isRequired,\n    following: PropTypes.number.isRequired,\n    company: PropTypes.string,\n    blog: PropTypes.string,\n    location: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Profile;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n  gap: 0.2rem;\n  margin: 1rem auto;\n  padding-right: 2rem;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    grid-template-columns: auto auto;\n    gap: 0.8rem;\n    padding: 0 1rem;\n  }\n`;\n\nexport const Selector = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: ${(props) => props.theme.colors.container};\n  color: ${(props) => props.color || props.theme.colors.text};\n  width: 100%;\n  min-height: 2rem;\n  border: none;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transition: background 0.3s, transform 0.3s;\n  padding: 0 1rem;\n\n  &:hover,\n  &.selected {\n    background: ${(props) => props.color || props.theme.colors.light};\n    color: ${(props) =>\n      props.color ? props.theme.colors.white : props.theme.colors.black};\n    transform: translateX(5px) scale(1.02);\n  }\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    border-radius: 20px;\n    &:hover,\n    &.selected {\n      transform: translateX(0) scale(1.02);\n    }\n  }\n`;\n\nexport const Cleaner = styled.button`\n  background: transparent;\n  color: ${(props) => props.theme.colors.text};\n  border: none;\n  text-align: left;\n  padding: 1rem;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    text-align: center;\n    padding: 0 1rem;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Selector, Cleaner } from './styles';\n\nconst Filter = ({ languages, currentLanguage, onClick }) => {\n  const selectors = languages.map(({ name, count, color }) => (\n    <Selector\n      key={name.toLowerCase()}\n      color={color}\n      className={currentLanguage === name ? 'selected' : ''}\n      onClick={() => onClick && onClick(name)}\n    >\n      <span>{name}</span>\n      <span>{count}</span>\n    </Selector>\n  ));\n\n  return (\n    <Container>\n      {selectors}\n      <Cleaner onClick={() => onClick && onClick(undefined)}>Limpar</Cleaner>\n    </Container>\n  );\n};\n\nFilter.defaultProps = {\n  currentLanguage: null,\n  onClick: null,\n};\n\nFilter.propTypes = {\n  languages: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      count: PropTypes.number.isRequired,\n      color: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  currentLanguage: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.25);\n  border-left: 3px solid\n    ${(props) => props.color || props.theme.colors.champagneDark};\n  padding: 1rem;\n`;\n\nexport const Name = styled.h3`\n  font-size: ${(props) => props.theme.fontSizes.large};\n  font-weight: normal;\n`;\n\nexport const Description = styled.p`\n  font-size: ${(props) => props.theme.fontSizes.small};\n  line-height: 1.25;\n  margin: 1rem 0;\n`;\n\nexport const Footer = styled.footer`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${(props) => props.color || props.theme.colors.champagneDark};\n  font-size: ${(props) => props.theme.fontSizes.small};\n`;\n\nexport const Lang = styled.span`\n  color: inherit;\n`;\n\nexport const Link = styled.a`\n  color: inherit;\n  font-weight: bold;\n  text-transform: uppercase;\n  text-decoration: none;\n`;\n","export const langColors = {\n  javascript: '#f1c40f',\n  typescript: '#2980b9',\n  python: '#2ecc71',\n  html: '#e67e22',\n  css: '#9b59b6',\n  scss: '#9b59b6',\n  vue: '#1abc9c',\n  php: '#3498db',\n  go: '#72aed8',\n  ruby: '#e74c3c',\n  c: '#16a085',\n  'c#': '#27ae60',\n  'c++': '#7f8c8d',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Name, Description, Footer, Lang, Link } from './styles';\n\nimport { langColors } from '../../../../services/config';\n\nconst Repository = ({ repository }) => {\n  const color =\n    langColors[repository.language && repository.language.toLowerCase()];\n\n  return (\n    <Container color={color}>\n      <Name>{repository.name}</Name>\n      <Description>{repository.description}</Description>\n      <Footer color={color}>\n        <Lang>{repository.language}</Lang>\n        <Link href={repository.html_url} target=\"_blank\">\n          Ver\n        </Link>\n      </Footer>\n    </Container>\n  );\n};\n\nRepository.propTypes = {\n  repository: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    html_url: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Repository;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 2rem;\n  margin-top: 2rem;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.sm}) {\n    grid-template-columns: auto;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Repository from './Repository';\n\nimport { Container } from './styles';\n\nconst Repositories = ({ repositories, currentLanguage }) => {\n  const repos = repositories\n    .filter(\n      (repository) =>\n        currentLanguage === undefined || repository.language === currentLanguage\n    )\n    .map((repository) => (\n      <Repository key={repository.id} repository={repository} />\n    ));\n\n  return <Container>{repos}</Container>;\n};\n\nRepositories.defaultProps = {\n  currentLanguage: undefined,\n};\n\nRepositories.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      html_url: PropTypes.string.isRequired,\n      language: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  currentLanguage: PropTypes.string,\n};\n\nexport default Repositories;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport const Container = styled.main`\n  display: flex;\n  min-height: 100vh;\n  overflow-y: auto;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    flex-direction: column;\n  }\n`;\n\nexport const Sidebar = styled.aside`\n  background: ${(props) => props.theme.colors.background};\n  min-width: 20rem;\n  max-height: 100vh;\n`;\n\nexport const Main = styled.section`\n  background: ${(props) => props.theme.colors.container};\n  width: 100%;\n  height: 100%;\n  padding: 40px;\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.md}) {\n    height: 100%;\n  }\n\n  @media screen and (max-width: ${(props) => props.theme.breakpoints.sm}) {\n    padding: 40px 20px;\n  }\n`;\n","import axios from 'axios';\nimport { langColors } from './config';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\nexport const getUser = async (login) => api.get(`/users/${login}`);\nexport const getRepos = async (login) => api.get(`/users/${login}/repos`);\n\nexport default api;\n\nexport const getLangsFrom = (repositories) => {\n  let stats = repositories\n    .map((repository) => repository.language)\n    .reduce(\n      (data, language) => ({\n        ...data,\n        [language]: (data[language] || 0) + 1,\n      }),\n      []\n    );\n\n  delete stats.null;\n\n  stats = Object.keys(stats)\n    .map((language) => ({\n      name: language,\n      count: stats[language],\n      color: langColors[language.toLowerCase()],\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  return stats;\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport Profile from './Profile';\nimport Filter from './Filter';\nimport Repositories from './Repositories';\n\nimport { Loading, Container, Sidebar, Main } from './styles';\n\nimport { getLangsFrom, getUser, getRepos } from '../../services/api';\n\nconst RepositoriesPage = () => {\n  const { login } = useParams();\n\n  const [user, setUser] = useState();\n  const [repositories, setRepositories] = useState();\n  const [languages, setLanguages] = useState();\n  const [currentLanguage, setCurrentLanguage] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const [userResponse, repositoriesResponse] = await Promise.all([\n        getUser(login),\n        getRepos(login),\n      ]);\n\n      setUser(userResponse.data);\n      setRepositories(repositoriesResponse.data);\n      setLanguages(getLangsFrom(repositoriesResponse.data));\n      setLoading(false);\n    };\n\n    loadData();\n  }, []);\n\n  const onFilterClick = (language) => {\n    setCurrentLanguage(language);\n  };\n\n  if (loading) {\n    return <Loading>Carregando...</Loading>;\n  }\n\n  return (\n    <Container>\n      <Sidebar>\n        <Profile user={user} />\n        <Filter\n          languages={languages}\n          currentLanguage={currentLanguage}\n          onClick={onFilterClick}\n        />\n      </Sidebar>\n      <Main>\n        <Repositories\n          repositories={repositories}\n          currentLanguage={currentLanguage}\n        />\n      </Main>\n    </Container>\n  );\n};\n\nexport default RepositoriesPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport MainPage from './pages/MainPage';\nimport RepositoriesPage from './pages/RepositoriesPage';\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:login/repositories\">\n          <RepositoriesPage />\n        </Route>\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  // Palette from FlatUI - https://flatuicolors.com/palette/defo\n  colors: {\n    white: '#ffffff',\n    black: '#000000',\n    turquese: '#1abc9c',\n    turqueseDark: '#16a085',\n    green: '#2ecc71',\n    greenDark: '#27ae60',\n    blue: '#3498db',\n    blueDark: '#2980b9',\n    violet: '#9b59b6',\n    violetDark: '#8e44ad',\n    yellow: '#f1c40f',\n    yellowDark: '#f39c12',\n    orange: '#e67e22',\n    orangeDark: '#d35400',\n    red: '#e74c3c',\n    redDark: '#c0392b',\n    champagne: '#ecf0f1',\n    champagneDark: '#bdc3c7',\n    metal: '#95a5a6',\n    metalDark: '#7f8c8d',\n    asphalt: '#34495e',\n    asphaltDark: '#2c3e50',\n    carbon: '#555459',\n    carbonDark: '#3b3a3e',\n\n    // Default colors\n    primary: '#2ecc71',\n    secondary: '#ecf0f1',\n    danger: '#f37272',\n    light: '#ecf0f1',\n    dark: '#233240',\n    background: '#191919',\n    container: '#2d2d2d',\n    text: '#fff',\n    link: '#3498db',\n\n    // Brands\n    devSamurai: '#f37272',\n  },\n  fonts: ['Open Sans', 'Arial', 'Helvetica', 'sans-serif'].join(','),\n  fontSizes: {\n    small: '.8rem',\n    normal: '1rem',\n    large: '1.2rem',\n    title: '1.3rem',\n    subtitle: '1.25rem',\n  },\n  breakpoints: {\n    xs: '0',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n    xxl: '1400px',\n  },\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Theme;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: ${(props) => props.theme.colors.background};\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  a {\n    color: ${(props) => props.theme.colors.link}\n  }\n  a.hover {\n    text-decoration: underline;\n  }\n\n  body, input, p, a, button {\n    color: ${(props) => props.theme.colors.text};\n    font-size: ${(props) => props.theme.fontSizes.normal};\n    font-family: ${(props) => props.theme.fonts};\n  }\n\n  small {\n    font-size: ${(props) => props.theme.fontSizes.small};\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  ::placeholder {\n    color: ${(props) => props.theme.colors.champagne};\n  }\n`;\n","import React from 'react';\r\n\r\nimport { Normalize } from 'styled-normalize';\r\n\r\nimport Routes from './routes';\r\n\r\nimport Theme from './styles/Theme';\r\nimport GlobalStyle from './styles/global';\r\n\r\nfunction App() {\r\n  return (\r\n    <Theme>\r\n      <Routes />\r\n      <GlobalStyle />\r\n      <Normalize />\r\n    </Theme>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}